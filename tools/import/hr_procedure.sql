-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.119.6.36;service_name=orcl;port=1521

SET client_encoding TO 'UTF8';

SET search_path = hr,public;




CREATE OR REPLACE PROCEDURE hr.add_job_history ( p_emp_id job_history.employee_id%type , p_start_date job_history.start_date%type , p_end_date job_history.end_date%type , p_job_id job_history.job_id%type , p_department_id job_history.department_id%type ) AS $body$
BEGIN
  INSERT INTO job_history(employee_id, start_date, end_date,
                           job_id, department_id)
    VALUES (p_emp_id, p_start_date, p_end_date, p_job_id, p_department_id);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hr.add_job_history ( p_emp_id job_history.employee_id%type , p_start_date job_history.start_date%type , p_end_date job_history.end_date%type , p_job_id job_history.job_id%type , p_department_id job_history.department_id%type ) FROM PUBLIC;





CREATE OR REPLACE PROCEDURE hr.secure_dml () AS $body$
BEGIN
  IF TO_CHAR(clock_timestamp(), 'HH24:MI') NOT BETWEEN '08:00' AND '18:00'
        OR TO_CHAR(clock_timestamp(), 'DY') IN ('SAT', 'SUN') THEN
	RAISE EXCEPTION '%', 'You may only make changes during normal office hours' USING ERRCODE = '45205';
  END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hr.secure_dml () FROM PUBLIC;





#CREATE OR REPLACE PROCEDURE hr.sp_concede_permissao (p_objeto text) AS $body$
#DECLARE

 # v_owner varchar(32) := 'SISDEPEN_APP';
 # v_usuario varchar(32) := 'USR_SISDEPEN';
 # v_delete varchar(32);
 # v_objeto_ref varchar(150);
 # v_sql varchar(32000);

#  procedure exec(p_str in text) is
#    v_err varchar(255);

BEGIN
    EXECUTE p_str;
    exception when others then
      v_err := substr(sqlerrm,1,255);
      RAISE NOTICE 'ERR: %;', p_str;
      RAISE NOTICE '   MSG: %', v_err;
  end;
begin
  declare
    cur CURSOR FOR
      SELECT
        object_name nome,
        object_type tipo,
        owner
      from
        all_objects
      where
        object_type in ('TABLE','VIEW','SEQUENCE','PROCEDURE','FUNCTION','PACKAGE') and
        object_name like upper(p_objeto) and
        owner = upper(v_owner)
      order by
        object_type,
        nome;
  begin
    --*****permissões*****
    for c in cur loop
      v_objeto_ref := ' on '|| c.owner ||'.'|| c.nome || ' to ' || v_usuario;

      if c.tipo = 'SEQUENCE' then
        v_sql := 'grant select' || v_objeto_ref;
      elsif c.tipo in ('TABLE','VIEW') then
        v_delete := ',delete';
        v_sql := 'grant select,insert,update' || v_delete || v_objeto_ref;
      elsif ((c.tipo = 'PROCEDURE') or (c.tipo = 'FUNCTION') or (c.tipo = 'PACKAGE')) then
        v_sql := 'grant execute' || v_objeto_ref;
      end if;

      exec(v_sql);

    end loop;

    -- *****sinônimos*****
    for c in cur loop
      v_sql := 'create or replace synonym ' || v_usuario || '.' || c.nome || ' for ' || c.owner ||'.'|| c.nome;
      exec(v_sql);
    end loop;

  end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hr.sp_concede_permissao (p_objeto text) FROM PUBLIC;



--
-- dblink wrapper to call function hr.sp_inc_app_end_geometrico as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE hr.sp_inc_app_end_geometrico (id_app_endereco sisdepen_app.app_custodiado_endereco.id_app_custodiado_endereco%type) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL sp_inc_app_end_geometrico_atx ( ' || quote_nullable(id_app_endereco) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE hr.sp_inc_app_end_geometrico_atx (id_app_endereco sisdepen_app.app_custodiado_endereco.id_app_custodiado_endereco%type) AS $body$
BEGIN
  update
    sisdepen_app.app_custodiado_endereco
  set
    ed_geometrico = sdo_geometry(2001,4326,sdo_point_type(ed_longitude,ed_latitude,null),null,null)
  where
    id_app_custodiado_endereco = id_app_endereco;

  commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hr.sp_inc_app_end_geometrico (id_app_endereco sisdepen_app.app_custodiado_endereco.id_app_custodiado_endereco%type) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE hr.sp_inc_app_end_geometrico_atx (id_app_endereco sisdepen_app.app_custodiado_endereco.id_app_custodiado_endereco%type) FROM PUBLIC;

